openapi: 3.0.3
info:
  title: PostHog API
  version: null
  description: "\nThis section of our Docs explains how to pull or push data from/to\
    \ our API. PostHog has an API available on all tiers of PostHog cloud pricing,\
    \ including the free tier, and for every self-hosted version.\n\nPlease note that\
    \ PostHog makes use of two different APIs, serving different purposes and using\
    \ different mechanisms for authentication.\n\nOne API is used for pushing data\
    \ into PostHog. This uses the 'Team API Key' that is included in the [frontend\
    \ snippet](/docs/integrate/client/js). This API Key is **public**, and is what\
    \ we use in our frontend integration to push events into PostHog, as well as to\
    \ check for feature flags, for instance.\n\nThe other API is more powerful and\
    \ allows you to perform any action as if you were an authenticated user utilizing\
    \ the PostHog UI. It is mostly used for getting data out of PostHog, as well as\
    \ other private actions such as creating a feature flag. This uses a 'Personal\
    \ API Key' which you need to create manually (instructions [below](#authentication)).\
    \ This API Key is **private** and you should not make it public nor share it with\
    \ anyone. It gives you access to all the data held by your PostHog instance, which\
    \ includes sensitive information.\n\nThese API Docs refer mostly to the **private\
    \ API**, performing authentication as outlined below. The only exception is the\
    \ [POST-only public endpoints](/docs/api/post-only-endpoints) section. This section\
    \ explicitly informs you on how to perform authentication. For endpoints in all\
    \ other sections, authentication is done as described below.\n\n## Authentication\n\
    \nPersonal API keys allow full access to your account, just like e-mail address\
    \ and password, but you can create any number of them and each one can invalidated\
    \ individually at any moment. This makes for greater control for you and improved\
    \ security of stored data.\n\n### How to obtain a personal API key\n\n1. Click\
    \ on your name/avatar on the top right.\n1. Click on 'My account'\n1. Navigate\
    \ to the 'Personal API Keys' section.\n1. Click \"+ Create a Personal API Key\"\
    .\n1. Give your new key a label – it's just for you, usually to describe the key's\
    \ purpose.\n1. Click 'Create Key'.\n1. There you go! At the top of the list you\
    \ should now be seeing your brand new key. **Immediately** copy its value, as\
    \ you'll **never** see it again after refreshing the page. But don't worry if\
    \ you forget to copy it – you can delete and create keys as much as you want.\n\
    \n### How to use a personal API key\n\nThere are three options:\n\n1. Use the\
    \ `Authorization` header and `Bearer` authentication, like so:\n    ```JavaScript\n\
    \    const headers = {\n        Authorization: `Bearer ${POSTHOG_PERSONAL_API_KEY}`\n\
    \    }\n    ```\n2. Put the key in request body, like so:\n    ```JavaScript\n\
    \    const body = {\n        personal_api_key: POSTHOG_PERSONAL_API_KEY\n    }\n\
    \    ```\n3. Put the key in query string, like so:\n    ```JavaScript\n    const\
    \ url = `https://posthog.example.com/api/event/?personal_api_key=${POSTHOG_PERSONAL_API_KEY}`\n\
    \    ```\n\nAny one of these methods works, but only the value encountered first\
    \ (in the order above) will be used for authenticaition!\n\nFor PostHog Cloud,\
    \ use `app.posthog.com` as the host address.\n\n#### Specifying a project when\
    \ using the API\n\nBy default, if you're accessing the API, PostHog will return\
    \ results from the last project you visited in the UI. To override this behavior,\
    \ you can pass in your Project API Key (public token) as a query parameter in\
    \ the request. This ensures you will get data from the project associated with\
    \ that token.\n\n**Example**\n\n```\napi/event/?token=my_project_api_key\n```\n\
    \n### cURL example for self-hosted PostHog\n\n```bash\nPOSTHOG_PERSONAL_API_KEY=qTjsppKJqYLr2YskbsLXmu46eW1oH0r3jZkmKaERlf0\n\
    \ncurl --header \"Authorization: Bearer $POSTHOG_PERSONAL_API_KEY\" https://posthog.example.com/api/person/\n\
    ```\n\n### cURL example for PostHog Cloud\n\n```bash\nPOSTHOG_PERSONAL_API_KEY=qTjsppKJqYLr2YskbsLXmu46eW1oH0r3jZkmKaERlf0\n\
    curl --header \"Authorization: Bearer $POSTHOG_PERSONAL_API_KEY\" https://app.posthog.com/api/person/\n\
    ```\n\n## Tips\n\n- The [`/users/@me/` endpoint](/docs/api/user) gives you useful\
    \ information about the current user.\n- The `/api/event_definition/` and `/api/property_definition`\
    \ endpoints provide the possible event names and properties you can use throughout\
    \ the rest of the API.\n- The maximum size of a POST request body is governed\
    \ by `settings.DATA_UPLOAD_MAX_MEMORY_SIZE`, and is 20MB by default.\n\n## Pagination\n\
    \nSometimes requests are paginated. If that's the case, it'll be in the following\
    \ format:\n\n```json\n{\n    \"next\": \"https://posthog.example.com/api/person/?cursor=cD0yMjgxOTA2\"\
    ,\n    \"previous\": null,\n    \"results\": [\n        ...\n    ]\n}\n```\n\n\
    You can then just call the `\"next\"` URL to get the next set of results.\n\n\
    \            "
paths:
  /api/organizations/{parent_lookup_organization_id}/invites/:
    get:
      operationId: invites_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - invites
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationInviteList'
          description: ''
    post:
      operationId: invites_create
      parameters:
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
          description: ''
  /api/organizations/{parent_lookup_organization_id}/invites/{id}/:
    delete:
      operationId: invites_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization invite.
        required: true
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - invites
      responses:
        '204':
          description: No response body
  /api/organizations/{parent_lookup_organization_id}/invites/bulk/:
    post:
      operationId: invites_bulk_create
      parameters:
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
          description: ''
  /api/organizations/{parent_lookup_organization_id}/members/:
    get:
      operationId: members_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - members
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationMemberList'
          description: ''
  /api/organizations/{parent_lookup_organization_id}/members/{user__uuid}/:
    put:
      operationId: members_update
      parameters:
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      - in: path
        name: user__uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - organizations
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationMember'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: ''
    patch:
      operationId: members_partial_update
      parameters:
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      - in: path
        name: user__uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - organizations
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMember'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: ''
    delete:
      operationId: members_destroy
      parameters:
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      - in: path
        name: user__uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - organizations
      - members
      responses:
        '204':
          description: No response body
  /api/organizations/{parent_lookup_organization_id}/plugins/:
    get:
      operationId: plugins_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - plugins
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginList'
          description: ''
    post:
      operationId: plugins_create
      parameters:
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - plugins
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ''
  /api/organizations/{parent_lookup_organization_id}/plugins/{id}/:
    get:
      operationId: plugins_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin.
        required: true
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - plugins
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ''
    put:
      operationId: plugins_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin.
        required: true
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - plugins
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ''
    patch:
      operationId: plugins_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin.
        required: true
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - plugins
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ''
    delete:
      operationId: plugins_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin.
        required: true
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - plugins
      responses:
        '204':
          description: No response body
  /api/organizations/{parent_lookup_organization_id}/plugins/{id}/check_for_updates/:
    get:
      operationId: plugins_check_for_updates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin.
        required: true
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - plugins
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ''
  /api/organizations/{parent_lookup_organization_id}/plugins/{id}/upgrade/:
    post:
      operationId: plugins_upgrade_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin.
        required: true
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - plugins
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ''
  /api/organizations/{parent_lookup_organization_id}/plugins/repository/:
    get:
      operationId: plugins_repository_retrieve
      parameters:
      - in: path
        name: parent_lookup_organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      - plugins
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ''
  /api/projects/:
    get:
      operationId: list
      description: Projects for the current organization.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - projects
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamBasicList'
          description: ''
    post:
      operationId: create
      description: Projects for the current organization.
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /api/projects/{id}/:
    get:
      operationId: retrieve
      description: Projects for the current organization.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - projects
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    put:
      operationId: update
      description: Projects for the current organization.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    patch:
      operationId: partial_update
      description: Projects for the current organization.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    delete:
      operationId: destroy
      description: Projects for the current organization.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - projects
      responses:
        '204':
          description: No response body
  /api/projects/{id}/reset_token/:
    patch:
      operationId: reset_token_partial_update
      description: Projects for the current organization.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - reset_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /api/projects/{project_id}/actions/:
    get:
      operationId: actions_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedActionList'
          description: ''
    post:
      operationId: actions_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
  /api/projects/{project_id}/actions/{id}/:
    get:
      operationId: actions_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this action.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    put:
      operationId: actions_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this action.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    patch:
      operationId: actions_partial_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this action.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAction'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
    delete:
      operationId: actions_destroy
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this action.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/actions/{id}/count/:
    get:
      operationId: actions_count_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this action.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
  /api/projects/{project_id}/actions/funnel/:
    get:
      operationId: actions_funnel_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
  /api/projects/{project_id}/actions/people/:
    get:
      operationId: actions_people_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
  /api/projects/{project_id}/actions/retention/:
    get:
      operationId: actions_retention_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
  /api/projects/{project_id}/actions/trends/:
    get:
      operationId: actions_trends_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - actions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ''
  /api/projects/{project_id}/annotations/:
    get:
      operationId: annotations_list
      description: Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)
        for more information on annotations.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - annotations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnnotationList'
          description: ''
    post:
      operationId: annotations_create
      description: Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)
        for more information on annotations.
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - annotations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
  /api/projects/{project_id}/annotations/{id}/:
    get:
      operationId: annotations_retrieve
      description: Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)
        for more information on annotations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annotation.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - annotations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
    put:
      operationId: annotations_update
      description: Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)
        for more information on annotations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annotation.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - annotations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
    patch:
      operationId: annotations_partial_update
      description: Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)
        for more information on annotations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annotation.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - annotations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnnotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnnotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnnotation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
    delete:
      operationId: annotations_destroy
      description: Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)
        for more information on annotations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annotation.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - annotations
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/cohorts/:
    get:
      operationId: cohorts_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - cohorts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClickhouseCohortList'
          description: ''
    post:
      operationId: cohorts_create
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - cohorts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClickhouseCohort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClickhouseCohort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClickhouseCohort'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseCohort'
          description: ''
  /api/projects/{project_id}/cohorts/{id}/:
    get:
      operationId: cohorts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cohort.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - cohorts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseCohort'
          description: ''
    put:
      operationId: cohorts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cohort.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - cohorts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClickhouseCohort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClickhouseCohort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClickhouseCohort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseCohort'
          description: ''
    patch:
      operationId: cohorts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cohort.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - cohorts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClickhouseCohort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClickhouseCohort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClickhouseCohort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseCohort'
          description: ''
    delete:
      operationId: cohorts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cohort.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - cohorts
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/dashboards/:
    get:
      operationId: dashboards_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - dashboards
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDashboardList'
          description: ''
    post:
      operationId: dashboards_create
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - dashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ''
  /api/projects/{project_id}/dashboards/{id}/:
    get:
      operationId: dashboards_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dashboard.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - dashboards
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ''
    put:
      operationId: dashboards_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dashboard.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - dashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ''
    patch:
      operationId: dashboards_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dashboard.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - dashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ''
    delete:
      operationId: dashboards_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dashboard.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - dashboards
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/event_definitions/:
    get:
      operationId: event_definitions_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - event_definitions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEnterpriseEventDefinitionList'
          description: ''
  /api/projects/{project_id}/event_definitions/{id}/:
    get:
      operationId: event_definitions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - event_definitions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseEventDefinition'
          description: ''
    put:
      operationId: event_definitions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - event_definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseEventDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnterpriseEventDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnterpriseEventDefinition'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseEventDefinition'
          description: ''
    patch:
      operationId: event_definitions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - event_definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEnterpriseEventDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEnterpriseEventDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEnterpriseEventDefinition'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseEventDefinition'
          description: ''
  /api/projects/{project_id}/events/:
    get:
      operationId: events_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      - in: query
        name: properties
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Property'
      tags:
      - events
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClickhouseEventList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedClickhouseEventList'
          description: ''
  /api/projects/{project_id}/events/{id}/:
    get:
      operationId: events_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - events
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
            text/csv:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
          description: ''
  /api/projects/{project_id}/events/values/:
    get:
      operationId: events_values_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - events
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
            text/csv:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
          description: ''
  /api/projects/{project_id}/experiments/:
    get:
      operationId: experiments_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - experiments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperimentList'
          description: ''
    post:
      operationId: experiments_create
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - experiments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
  /api/projects/{project_id}/experiments/{id}/:
    get:
      operationId: experiments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experiment.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - experiments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    put:
      operationId: experiments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experiment.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - experiments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    patch:
      operationId: experiments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experiment.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - experiments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    delete:
      operationId: experiments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experiment.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - experiments
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/experiments/{id}/results/:
    get:
      operationId: experiments_results_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experiment.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - experiments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
  /api/projects/{project_id}/experiments/{id}/secondary_results/:
    get:
      operationId: experiments_secondary_results_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experiment.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - experiments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
  /api/projects/{project_id}/feature_flags/:
    get:
      operationId: feature_flags_list
      description: Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags)
        for more information on feature flags.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - feature_flags
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureFlagList'
          description: ''
    post:
      operationId: feature_flags_create
      description: Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags)
        for more information on feature flags.
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - feature_flags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ''
  /api/projects/{project_id}/feature_flags/{id}/:
    get:
      operationId: feature_flags_retrieve
      description: Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags)
        for more information on feature flags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feature flag.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - feature_flags
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ''
    put:
      operationId: feature_flags_update
      description: Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags)
        for more information on feature flags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feature flag.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - feature_flags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ''
    patch:
      operationId: feature_flags_partial_update
      description: Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags)
        for more information on feature flags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feature flag.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - feature_flags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeatureFlag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ''
    delete:
      operationId: feature_flags_destroy
      description: Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags)
        for more information on feature flags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feature flag.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - feature_flags
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/feature_flags/my_flags/:
    get:
      operationId: feature_flags_my_flags_retrieve
      description: Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags)
        for more information on feature flags.
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - feature_flags
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ''
  /api/projects/{project_id}/groups/:
    get:
      operationId: groups_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
  /api/projects/{project_id}/groups/find/:
    get:
      operationId: groups_find_retrieve
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/projects/{project_id}/groups/property_definitions/:
    get:
      operationId: groups_property_definitions_retrieve
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/projects/{project_id}/groups/property_values/:
    get:
      operationId: groups_property_values_retrieve
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/projects/{project_id}/groups/related/:
    get:
      operationId: groups_related_retrieve
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/projects/{project_id}/groups_types/:
    get:
      operationId: groups_types_list
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - groups_types
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupType'
          description: ''
  /api/projects/{project_id}/groups_types/update_metadata/:
    patch:
      operationId: groups_types_update_metadata_partial_update
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - groups_types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupType'
          description: ''
  /api/projects/{project_id}/hooks/:
    get:
      operationId: hooks_list
      description: Retrieve, create, update or destroy REST hooks.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - hooks
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHookList'
          description: ''
    post:
      operationId: hooks_create
      description: Retrieve, create, update or destroy REST hooks.
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - hooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Hook'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: ''
  /api/projects/{project_id}/hooks/{id}/:
    get:
      operationId: hooks_retrieve
      description: Retrieve, create, update or destroy REST hooks.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this hook.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - hooks
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: ''
    put:
      operationId: hooks_update
      description: Retrieve, create, update or destroy REST hooks.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this hook.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - hooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Hook'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: ''
    patch:
      operationId: hooks_partial_update
      description: Retrieve, create, update or destroy REST hooks.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this hook.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - hooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHook'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: ''
    delete:
      operationId: hooks_destroy
      description: Retrieve, create, update or destroy REST hooks.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this hook.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - hooks
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/insights/:
    get:
      operationId: insights_list
      parameters:
      - in: query
        name: created_by
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      - in: query
        name: short_id
        schema:
          type: string
      tags:
      - insights
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInsightList'
          description: ''
    post:
      operationId: insights_create
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Insight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
  /api/projects/{project_id}/insights/{id}/:
    get:
      operationId: insights_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this insight.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
    put:
      operationId: insights_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this insight.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Insight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
    patch:
      operationId: insights_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this insight.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInsight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInsight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInsight'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
    delete:
      operationId: insights_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this insight.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/insights/funnel/:
    get:
      operationId: insights_funnel_retrieve
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
    post:
      operationId: Funnels
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - analytics
      - insights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Funnel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Funnel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Funnel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunnelStepsResults'
          description: Note, if funnel_viz_type is set the response will be different.
  /api/projects/{project_id}/insights/funnel/correlation/:
    get:
      operationId: insights_funnel_correlation_retrieve
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
    post:
      operationId: insights_funnel_correlation_create
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Insight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
  /api/projects/{project_id}/insights/layouts/:
    patch:
      operationId: insights_layouts_partial_update
      description: Dashboard item layouts.
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInsight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInsight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInsight'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
  /api/projects/{project_id}/insights/path/:
    get:
      operationId: insights_path_retrieve
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
    post:
      operationId: insights_path_create
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Insight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
  /api/projects/{project_id}/insights/retention/:
    get:
      operationId: insights_retention_retrieve
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
  /api/projects/{project_id}/insights/trend/:
    get:
      operationId: insights_trend_retrieve
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - insights
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ''
    post:
      operationId: Trends
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - analytics
      - insights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trend'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trend'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trend'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendResults'
          description: ''
  /api/projects/{project_id}/persons/:
    get:
      operationId: persons_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: distinct_id
        schema:
          type: string
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: query
        name: key_identifier
        schema:
          type: string
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
          description: ''
    post:
      operationId: persons_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/{id}/:
    get:
      operationId: persons_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    put:
      operationId: persons_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    patch:
      operationId: persons_partial_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    delete:
      operationId: persons_destroy
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/persons/{id}/merge/:
    post:
      operationId: persons_merge_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/{id}/split/:
    post:
      operationId: persons_split_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/cohorts/:
    get:
      operationId: persons_cohorts_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/funnel/:
    get:
      operationId: persons_funnel_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    post:
      operationId: persons_funnel_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/funnel/correlation/:
    get:
      operationId: persons_funnel_correlation_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    post:
      operationId: persons_funnel_correlation_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/lifecycle/:
    get:
      operationId: persons_lifecycle_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/path/:
    get:
      operationId: persons_path_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    post:
      operationId: persons_path_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/properties/:
    get:
      operationId: persons_properties_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/retention/:
    get:
      operationId: persons_retention_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/stickiness/:
    get:
      operationId: persons_stickiness_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/persons/values/:
    get:
      operationId: persons_values_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - persons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /api/projects/{project_id}/plugin_configs/:
    get:
      operationId: plugin_configs_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - plugin_configs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginConfigList'
          description: ''
    post:
      operationId: plugin_configs_create
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - plugin_configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ''
  /api/projects/{project_id}/plugin_configs/{parent_lookup_plugin_config_id}/logs/:
    get:
      operationId: plugin_configs_logs_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_plugin_config_id
        schema:
          type: string
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - plugin_configs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginLogEntryList'
          description: ''
  /api/projects/{project_id}/plugin_configs/{id}/:
    get:
      operationId: plugin_configs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin config.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - plugin_configs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ''
    put:
      operationId: plugin_configs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin config.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - plugin_configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ''
    patch:
      operationId: plugin_configs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin config.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - plugin_configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ''
    delete:
      operationId: plugin_configs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin config.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - plugin_configs
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/plugin_configs/{id}/job/:
    post:
      operationId: plugin_configs_job_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin config.
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - plugin_configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ''
  /api/projects/{project_id}/plugin_configs/rearrange/:
    patch:
      operationId: plugin_configs_rearrange_partial_update
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - plugin_configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ''
  /api/projects/{project_id}/property_definitions/:
    get:
      operationId: property_definitions_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - property_definitions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEnterprisePropertyDefinitionList'
          description: ''
  /api/projects/{project_id}/property_definitions/{id}/:
    get:
      operationId: property_definitions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - property_definitions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePropertyDefinition'
          description: ''
    put:
      operationId: property_definitions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - property_definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterprisePropertyDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnterprisePropertyDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnterprisePropertyDefinition'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePropertyDefinition'
          description: ''
    patch:
      operationId: property_definitions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - property_definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEnterprisePropertyDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEnterprisePropertyDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEnterprisePropertyDefinition'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePropertyDefinition'
          description: ''
  /api/projects/{project_id}/session_recordings/:
    get:
      operationId: session_recordings_retrieve
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - session_recordings
      responses:
        '200':
          description: No response body
  /api/projects/{project_id}/session_recordings/{id}/:
    get:
      operationId: session_recordings_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - session_recordings
      responses:
        '200':
          description: No response body
  /api/projects/{project_id}/session_recordings/{id}/snapshots/:
    get:
      operationId: session_recordings_snapshots_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_id
        required: true
        schema:
          type: string
        description: Project ID of the project you're trying to access. To find the
          ID of the project, make a call to /api/projects/.
      tags:
      - session_recordings
      responses:
        '200':
          description: No response body
components:
  schemas:
    Action:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        post_to_slack:
          type: boolean
        slack_message_format:
          type: string
          maxLength: 200
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ActionStep'
        created_at:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
        is_calculating:
          type: boolean
          readOnly: true
        last_calculated_at:
          type: string
          format: date-time
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        team_id:
          type: integer
          readOnly: true
      required:
      - created_at
      - created_by
      - id
      - is_calculating
      - team_id
    ActionStep:
      type: object
      properties:
        id:
          type: string
        event:
          type: string
          nullable: true
          maxLength: 400
        tag_name:
          type: string
          nullable: true
          maxLength: 400
        text:
          type: string
          nullable: true
          maxLength: 400
        href:
          type: string
          nullable: true
          maxLength: 65535
        selector:
          type: string
          nullable: true
          maxLength: 65535
        url:
          type: string
          nullable: true
          maxLength: 65535
        name:
          type: string
          nullable: true
          maxLength: 400
        url_matching:
          enum:
          - contains
          - regex
          - exact
          - ''
          - null
          type: string
          nullable: true
        properties:
          type: object
          additionalProperties: {}
          nullable: true
    Annotation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
          maxLength: 400
        date_marker:
          type: string
          format: date-time
          nullable: true
        creation_type:
          enum:
          - USR
          - GIT
          type: string
          readOnly: true
        dashboard_item:
          type: integer
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
        scope:
          enum:
          - dashboard_item
          - project
          - organization
          type: string
      required:
      - created_at
      - created_by
      - creation_type
      - id
      - updated_at
    ClickhouseCohort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        description:
          type: string
          maxLength: 1000
        groups:
          type: object
          additionalProperties: {}
        deleted:
          type: boolean
        is_calculating:
          type: boolean
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_calculation:
          type: string
          format: date-time
          readOnly: true
        errors_calculating:
          type: integer
          readOnly: true
        count:
          type: integer
          nullable: true
          readOnly: true
        is_static:
          type: boolean
      required:
      - count
      - created_at
      - created_by
      - errors_calculating
      - id
      - is_calculating
      - last_calculation
    ClickhouseEvent:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        distinct_id:
          type: string
          readOnly: true
        properties:
          type: string
          readOnly: true
        event:
          type: string
          readOnly: true
        timestamp:
          type: string
          readOnly: true
        person:
          type: string
          readOnly: true
        elements:
          type: string
          readOnly: true
        elements_chain:
          type: string
          readOnly: true
      required:
      - distinct_id
      - elements
      - elements_chain
      - event
      - id
      - person
      - properties
      - timestamp
    Dashboard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        description:
          type: string
        pinned:
          type: boolean
        items:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_shared:
          type: boolean
        share_token:
          type: string
          nullable: true
          maxLength: 400
        deleted:
          type: boolean
        creation_mode:
          enum:
          - default
          - template
          - duplicate
          type: string
          readOnly: true
        use_template:
          type: string
          writeOnly: true
        use_dashboard:
          type: integer
          writeOnly: true
          nullable: true
        filters:
          type: object
          additionalProperties: {}
        tags:
          type: array
          items:
            type: string
            maxLength: 32
      required:
      - created_at
      - created_by
      - creation_mode
      - id
      - items
    EnterpriseEventDefinition:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        owner:
          type: integer
          nullable: true
        description:
          type: string
          maxLength: 400
        tags:
          type: array
          items:
            type: string
            maxLength: 32
          nullable: true
        volume_30_day:
          type: integer
          readOnly: true
        query_usage_30_day:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        updated_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        last_seen_at:
          type: string
          format: date-time
          readOnly: true
        verified:
          type: boolean
        verified_at:
          type: string
          format: date-time
          readOnly: true
        verified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
      required:
      - created_at
      - id
      - last_seen_at
      - name
      - query_usage_30_day
      - updated_at
      - updated_by
      - verified_at
      - verified_by
      - volume_30_day
    EnterprisePropertyDefinition:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          maxLength: 400
        tags:
          type: array
          items:
            type: string
            maxLength: 32
          nullable: true
        is_numerical:
          type: boolean
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        updated_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        query_usage_30_day:
          type: integer
          readOnly: true
        is_event_property:
          type: string
          readOnly: true
        property_type:
          enum:
          - DateTime
          - String
          - Numeric
          - Boolean
          - ''
          - null
          type: string
          nullable: true
        property_type_format:
          enum:
          - unix_timestamp
          - unix_timestamp_milliseconds
          - YYYY-MM-DDThh:mm:ssZ
          - YYYY-MM-DD hh:mm:ss
          - DD-MM-YYYY hh:mm:ss
          - YYYY-MM-DD
          - rfc_822
          - YYYY/MM/DD hh:mm:ss
          - DD/MM/YYYY hh:mm:ss
          - ''
          - null
          type: string
          nullable: true
      required:
      - id
      - is_event_property
      - is_numerical
      - name
      - query_usage_30_day
      - updated_at
      - updated_by
    Experiment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 400
        description:
          type: string
          nullable: true
          maxLength: 400
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        feature_flag_key:
          type: string
        parameters:
          type: object
          additionalProperties: {}
          nullable: true
        secondary_metrics:
          type: object
          additionalProperties: {}
          nullable: true
        filters:
          type: object
          additionalProperties: {}
        archived:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by
      - feature_flag_key
      - id
      - name
      - updated_at
    FeatureFlag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        key:
          type: string
          maxLength: 400
        filters:
          type: object
          additionalProperties: {}
        deleted:
          type: boolean
        active:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          type: string
          format: date-time
        is_simple_flag:
          type: boolean
          readOnly: true
        rollout_percentage:
          type: integer
          nullable: true
          readOnly: true
      required:
      - created_by
      - id
      - is_simple_flag
      - key
      - rollout_percentage
    FilterAction:
      type: object
      properties:
        id:
          type: string
          description: Name of the event to filter on. For example `$pageview` or
            `user sign up`.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
      required:
      - id
    FilterEvent:
      type: object
      properties:
        id:
          type: string
          description: Name of the event to filter on. For example `$pageview` or
            `user sign up`.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
      required:
      - id
    Funnel:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/FilterEvent'
          description: Events to filter on. One of `events` or `actions` is required.
        actions:
          type: array
          items:
            $ref: '#/components/schemas/FilterAction'
          description: Actions to filter on. One of `events` or `actions` is required.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
        filter_test_accounts:
          type: boolean
          default: false
          description: Whether to filter out internal and test accounts. See "project
            settings" in your PostHog account for the filters.
        date_from:
          type: string
          default: -7d
          description: What date to filter the results from. Can either be a date
            `2021-01-01`, or a relative date, like `-7d` for last seven days, `-1m`
            for last month, `mStart` for start of the month or `yStart` for the start
            of the year.
        date_to:
          type: string
          default: -7d
          description: What date to filter the results to. Can either be a date `2021-01-01`,
            or a relative date, like `-7d` for last seven days, `-1m` for last month,
            `mStart` for start of the month or `yStart` for the start of the year.
        breakdown:
          type: string
          description: A property to break down on. You can select the type of the
            property with breakdown_type.
        breakdown_type:
          enum:
          - event
          - person
          - cohort
          - group
          type: string
          description: Type of property to break down on.
        funnel_window_interval:
          type: integer
          default: 14
          description: Funnel window size. Set in combination with funnel_window_interval,
            so defaults to 'days'.
        funnel_window_interval_type:
          enum:
          - DAY
          - MINUTE
          - HOUR
          - WEEK
          - MONTH
          type: string
          default: days
          description: The type of interval. Used in combination with `funnel_window_intervals`.
        funnel_viz_type:
          enum:
          - trends
          - time_to_convert
          - steps
          type: string
          default: steps
          description: |-
            The visualisation type.
            - `steps` Track instances progress between steps of the funnel
            - `trends` Track how this funnel's conversion rate is trending over time.
            - `time_to_convert` Track how long it takes for instances to convert
        funnel_order_type:
          enum:
          - strict
          - unordered
          - ordered
          type: string
          default: ordered
          description: |-
            - `ordered` - Step B must happen after Step A, but any number events can happen between A and B.
            - `strict` - Step B must happen directly after Step A without any events in between.
            - `unordered` - Steps can be completed in any sequence.
        exclusions:
          type: array
          items:
            $ref: '#/components/schemas/FunnelExclusion'
          description: Exclude users/groups that completed the specified event between
            two specific steps. Note that these users/groups will be completely excluded
            from the entire funnel.
        aggregation_group_type_index:
          type: integer
          default: 0
          description: Aggregate by users or by groups. `0` means user, `>0` means
            a group. See interface for the corresponding ID of the group.
        breakdown_limit:
          type: integer
          default: 10
        funnel_window_days:
          type: integer
          default: 14
          description: (DEPRECATED) Funnel window size in days.
    FunnelExclusion:
      type: object
      properties:
        id:
          type: string
          description: Name of the event to filter on. For example `$pageview` or
            `user sign up`.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
        funnel_from_step:
          type: integer
          default: 0
        funnel_to_step:
          type: integer
          default: 1
      required:
      - id
    FunnelStepsResult:
      type: object
      properties:
        count:
          type: integer
          description: Number of people in this step.
        action_id:
          type: string
          description: Corresponds to the `id` of the entities passed through to `events`
            or `actions`.
        average_conversion_time:
          type: number
          format: float
          description: Average conversion time of person or groups between steps.
            `null` for the first step.
        median_conversion_time:
          type: number
          format: float
          description: Median conversion time of person or groups between steps. `null`
            for the first step.
        converted_people_url:
          type: string
          description: 'Path of a URL to get a list of people that converted after
            this step. In this format: `/api/person/funnel?...`'
        dropped_people_url:
          type: string
          description: 'Path of a URL to get a list of people that dropped after this
            step. In this format: `/api/person/funnel?...`'
        order:
          type: string
          description: Order of this step in the funnel. The API should return the
            steps in order anyway.
      required:
      - action_id
      - average_conversion_time
      - converted_people_url
      - count
      - dropped_people_url
      - median_conversion_time
      - order
    FunnelStepsResults:
      type: object
      properties:
        is_cached:
          type: boolean
          description: Whether the result is cached. To force a refresh, pass ?refresh=true
        last_refresh:
          type: string
          format: date-time
          description: If the result is cached, when it was last refreshed.
        result:
          type: array
          items:
            $ref: '#/components/schemas/FunnelStepsResult'
      required:
      - is_cached
      - last_refresh
      - result
    GenericInsights:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/FilterEvent'
          description: Events to filter on. One of `events` or `actions` is required.
        actions:
          type: array
          items:
            $ref: '#/components/schemas/FilterAction'
          description: Actions to filter on. One of `events` or `actions` is required.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
        filter_test_accounts:
          type: boolean
          default: false
          description: Whether to filter out internal and test accounts. See "project
            settings" in your PostHog account for the filters.
        date_from:
          type: string
          default: -7d
          description: What date to filter the results from. Can either be a date
            `2021-01-01`, or a relative date, like `-7d` for last seven days, `-1m`
            for last month, `mStart` for start of the month or `yStart` for the start
            of the year.
        date_to:
          type: string
          default: -7d
          description: What date to filter the results to. Can either be a date `2021-01-01`,
            or a relative date, like `-7d` for last seven days, `-1m` for last month,
            `mStart` for start of the month or `yStart` for the start of the year.
    Group:
      type: object
      properties:
        group_type_index:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        group_key:
          type: string
          maxLength: 400
        group_properties:
          type: object
          additionalProperties: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - group_key
      - group_type_index
    GroupType:
      type: object
      properties:
        group_type:
          type: string
          readOnly: true
        group_type_index:
          type: integer
          readOnly: true
        name_singular:
          type: string
          nullable: true
          maxLength: 400
        name_plural:
          type: string
          nullable: true
          maxLength: 400
      required:
      - group_type
      - group_type_index
    Hook:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        event:
          type: string
          maxLength: 64
        target:
          type: string
          format: uri
          title: Target URL
          maxLength: 255
        resource_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        team:
          type: integer
          readOnly: true
      required:
      - created
      - event
      - target
      - team
      - updated
    Insight:
      type: object
      description: Simplified serializer to speed response times when loading large
        amounts of objects.
      properties:
        id:
          type: integer
          readOnly: true
        short_id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        filters:
          type: object
          additionalProperties: {}
        filters_hash:
          type: string
          nullable: true
          maxLength: 400
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        deleted:
          type: boolean
        dashboard:
          type: integer
          nullable: true
        dive_dashboard:
          type: integer
          nullable: true
        layouts:
          type: object
          additionalProperties: {}
        color:
          type: string
          nullable: true
          maxLength: 400
        last_refresh:
          type: string
          readOnly: true
        refreshing:
          type: boolean
        result:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 400
        updated_at:
          type: string
          format: date-time
          readOnly: true
        tags:
          type: array
          items:
            type: string
            maxLength: 32
        favorited:
          type: boolean
        saved:
          type: boolean
        last_modified_at:
          type: string
          format: date-time
          readOnly: true
        last_modified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_sample:
          type: boolean
          readOnly: true
      required:
      - created_at
      - created_by
      - id
      - is_sample
      - last_modified_at
      - last_modified_by
      - last_refresh
      - result
      - short_id
      - updated_at
    OrganizationInvite:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        target_email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        emailing_attempt_made:
          type: boolean
          readOnly: true
        is_expired:
          type: boolean
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by
      - emailing_attempt_made
      - id
      - is_expired
      - target_email
      - updated_at
    OrganizationMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        level:
          enum:
          - 1
          - 8
          - 15
          type: integer
          minimum: 0
          maximum: 32767
        joined_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - joined_at
      - updated_at
      - user
    PaginatedActionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    PaginatedAnnotationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Annotation'
    PaginatedClickhouseCohortList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseCohort'
    PaginatedClickhouseEventList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseEvent'
    PaginatedDashboardList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Dashboard'
    PaginatedEnterpriseEventDefinitionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseEventDefinition'
    PaginatedEnterprisePropertyDefinitionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnterprisePropertyDefinition'
    PaginatedExperimentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Experiment'
    PaginatedFeatureFlagList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeatureFlag'
    PaginatedGroupList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedHookList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Hook'
    PaginatedInsightList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Insight'
    PaginatedOrganizationInviteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationInvite'
    PaginatedOrganizationMemberList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationMember'
    PaginatedPersonList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    PaginatedPluginConfigList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PluginConfig'
    PaginatedPluginList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Plugin'
    PaginatedPluginLogEntryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PluginLogEntry'
    PaginatedTeamBasicList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TeamBasic'
    PatchedAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        post_to_slack:
          type: boolean
        slack_message_format:
          type: string
          maxLength: 200
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ActionStep'
        created_at:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
        is_calculating:
          type: boolean
          readOnly: true
        last_calculated_at:
          type: string
          format: date-time
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        team_id:
          type: integer
          readOnly: true
    PatchedAnnotation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
          maxLength: 400
        date_marker:
          type: string
          format: date-time
          nullable: true
        creation_type:
          enum:
          - USR
          - GIT
          type: string
          readOnly: true
        dashboard_item:
          type: integer
          nullable: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
        scope:
          enum:
          - dashboard_item
          - project
          - organization
          type: string
    PatchedClickhouseCohort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        description:
          type: string
          maxLength: 1000
        groups:
          type: object
          additionalProperties: {}
        deleted:
          type: boolean
        is_calculating:
          type: boolean
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_calculation:
          type: string
          format: date-time
          readOnly: true
        errors_calculating:
          type: integer
          readOnly: true
        count:
          type: integer
          nullable: true
          readOnly: true
        is_static:
          type: boolean
    PatchedDashboard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        description:
          type: string
        pinned:
          type: boolean
        items:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_shared:
          type: boolean
        share_token:
          type: string
          nullable: true
          maxLength: 400
        deleted:
          type: boolean
        creation_mode:
          enum:
          - default
          - template
          - duplicate
          type: string
          readOnly: true
        use_template:
          type: string
          writeOnly: true
        use_dashboard:
          type: integer
          writeOnly: true
          nullable: true
        filters:
          type: object
          additionalProperties: {}
        tags:
          type: array
          items:
            type: string
            maxLength: 32
    PatchedEnterpriseEventDefinition:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        owner:
          type: integer
          nullable: true
        description:
          type: string
          maxLength: 400
        tags:
          type: array
          items:
            type: string
            maxLength: 32
          nullable: true
        volume_30_day:
          type: integer
          readOnly: true
        query_usage_30_day:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        updated_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        last_seen_at:
          type: string
          format: date-time
          readOnly: true
        verified:
          type: boolean
        verified_at:
          type: string
          format: date-time
          readOnly: true
        verified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
    PatchedEnterprisePropertyDefinition:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          maxLength: 400
        tags:
          type: array
          items:
            type: string
            maxLength: 32
          nullable: true
        is_numerical:
          type: boolean
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        updated_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        query_usage_30_day:
          type: integer
          readOnly: true
        is_event_property:
          type: string
          readOnly: true
        property_type:
          enum:
          - DateTime
          - String
          - Numeric
          - Boolean
          - ''
          - null
          type: string
          nullable: true
        property_type_format:
          enum:
          - unix_timestamp
          - unix_timestamp_milliseconds
          - YYYY-MM-DDThh:mm:ssZ
          - YYYY-MM-DD hh:mm:ss
          - DD-MM-YYYY hh:mm:ss
          - YYYY-MM-DD
          - rfc_822
          - YYYY/MM/DD hh:mm:ss
          - DD/MM/YYYY hh:mm:ss
          - ''
          - null
          type: string
          nullable: true
    PatchedExperiment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 400
        description:
          type: string
          nullable: true
          maxLength: 400
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        feature_flag_key:
          type: string
        parameters:
          type: object
          additionalProperties: {}
          nullable: true
        secondary_metrics:
          type: object
          additionalProperties: {}
          nullable: true
        filters:
          type: object
          additionalProperties: {}
        archived:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeatureFlag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        key:
          type: string
          maxLength: 400
        filters:
          type: object
          additionalProperties: {}
        deleted:
          type: boolean
        active:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          type: string
          format: date-time
        is_simple_flag:
          type: boolean
          readOnly: true
        rollout_percentage:
          type: integer
          nullable: true
          readOnly: true
    PatchedGroupType:
      type: object
      properties:
        group_type:
          type: string
          readOnly: true
        group_type_index:
          type: integer
          readOnly: true
        name_singular:
          type: string
          nullable: true
          maxLength: 400
        name_plural:
          type: string
          nullable: true
          maxLength: 400
    PatchedHook:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        event:
          type: string
          maxLength: 64
        target:
          type: string
          format: uri
          title: Target URL
          maxLength: 255
        resource_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        team:
          type: integer
          readOnly: true
    PatchedInsight:
      type: object
      description: Simplified serializer to speed response times when loading large
        amounts of objects.
      properties:
        id:
          type: integer
          readOnly: true
        short_id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 400
        filters:
          type: object
          additionalProperties: {}
        filters_hash:
          type: string
          nullable: true
          maxLength: 400
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        deleted:
          type: boolean
        dashboard:
          type: integer
          nullable: true
        dive_dashboard:
          type: integer
          nullable: true
        layouts:
          type: object
          additionalProperties: {}
        color:
          type: string
          nullable: true
          maxLength: 400
        last_refresh:
          type: string
          readOnly: true
        refreshing:
          type: boolean
        result:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 400
        updated_at:
          type: string
          format: date-time
          readOnly: true
        tags:
          type: array
          items:
            type: string
            maxLength: 32
        favorited:
          type: boolean
        saved:
          type: boolean
        last_modified_at:
          type: string
          format: date-time
          readOnly: true
        last_modified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_sample:
          type: boolean
          readOnly: true
    PatchedOrganizationMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        level:
          enum:
          - 1
          - 8
          - 15
          type: integer
          minimum: 0
          maximum: 32767
        joined_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPerson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        distinct_ids:
          type: array
          items:
            type: string
          readOnly: true
        properties:
          type: object
          additionalProperties: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedPlugin:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        plugin_type:
          enum:
          - local
          - custom
          - repository
          - source
          - ''
          - null
          type: string
          nullable: true
        name:
          type: string
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
          readOnly: true
        config_schema:
          type: object
          additionalProperties: {}
        tag:
          type: string
          nullable: true
          maxLength: 200
        source:
          type: string
          nullable: true
        latest_tag:
          type: string
          readOnly: true
        is_global:
          type: boolean
        organization_id:
          type: string
          format: uuid
          readOnly: true
        organization_name:
          type: string
          readOnly: true
        capabilities:
          type: object
          additionalProperties: {}
        metrics:
          type: object
          additionalProperties: {}
          nullable: true
        public_jobs:
          type: object
          additionalProperties: {}
          nullable: true
    PatchedPluginConfig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        plugin:
          type: integer
        enabled:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        config:
          type: string
          readOnly: true
        error:
          type: object
          additionalProperties: {}
          nullable: true
        team_id:
          type: integer
          nullable: true
          readOnly: true
    PatchedTeam:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        organization:
          type: string
          format: uuid
          readOnly: true
        api_token:
          type: string
          readOnly: true
        app_urls:
          type: array
          items:
            type: string
            nullable: true
            maxLength: 200
        name:
          type: string
          maxLength: 200
          minLength: 1
        slack_incoming_webhook:
          type: string
          nullable: true
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        anonymize_ips:
          type: boolean
        completed_snippet_onboarding:
          type: boolean
        ingested_event:
          type: boolean
          readOnly: true
        test_account_filters:
          type: object
          additionalProperties: {}
        path_cleaning_filters:
          type: object
          additionalProperties: {}
          nullable: true
        is_demo:
          type: boolean
          readOnly: true
        timezone:
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GMT
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - US/Alaska
          - US/Arizona
          - US/Central
          - US/Eastern
          - US/Hawaii
          - US/Mountain
          - US/Pacific
          - UTC
          type: string
        data_attributes:
          type: object
          additionalProperties: {}
        correlation_config:
          type: object
          additionalProperties: {}
          nullable: true
        session_recording_opt_in:
          type: boolean
        effective_membership_level:
          enum:
          - 1
          - 8
          - 15
          type: integer
          nullable: true
          readOnly: true
        access_control:
          type: boolean
        has_group_types:
          type: boolean
          readOnly: true
    Person:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        distinct_ids:
          type: array
          items:
            type: string
          readOnly: true
        properties:
          type: object
          additionalProperties: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - created_at
      - distinct_ids
      - id
      - name
      - uuid
    Plugin:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        plugin_type:
          enum:
          - local
          - custom
          - repository
          - source
          - ''
          - null
          type: string
          nullable: true
        name:
          type: string
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
          readOnly: true
        config_schema:
          type: object
          additionalProperties: {}
        tag:
          type: string
          nullable: true
          maxLength: 200
        source:
          type: string
          nullable: true
        latest_tag:
          type: string
          readOnly: true
        is_global:
          type: boolean
        organization_id:
          type: string
          format: uuid
          readOnly: true
        organization_name:
          type: string
          readOnly: true
        capabilities:
          type: object
          additionalProperties: {}
        metrics:
          type: object
          additionalProperties: {}
          nullable: true
        public_jobs:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - id
      - latest_tag
      - organization_id
      - organization_name
      - url
    PluginConfig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        plugin:
          type: integer
        enabled:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        config:
          type: string
          readOnly: true
        error:
          type: object
          additionalProperties: {}
          nullable: true
        team_id:
          type: integer
          nullable: true
          readOnly: true
      required:
      - config
      - id
      - order
      - plugin
      - team_id
    PluginLogEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team_id:
          type: integer
          readOnly: true
        plugin_id:
          type: integer
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        source:
          enum:
          - SYSTEM
          - PLUGIN
          - CONSOLE
          type: string
          readOnly: true
        type:
          enum:
          - DEBUG
          - LOG
          - INFO
          - WARN
          - ERROR
          type: string
          readOnly: true
        message:
          type: string
          readOnly: true
        instance_id:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - instance_id
      - message
      - plugin_id
      - source
      - team_id
      - timestamp
      - type
    Property:
      type: object
      properties:
        key:
          type: string
          description: Key of the property you're filtering on. For example `email`
            or `$current_url`
        value:
          type: string
          description: Value of your filter. Can be an array. For example `test@example.com`
            or `https://example.com/test/`. Can be an array, like `["test@example.com","ok@example.com"]`
        operator:
          enum:
          - exact
          - is_not
          - icontains
          - not_icontains
          - regex
          - not_regex
          - gt
          - lt
          - is_set
          - is_not_set
          - is_date_after
          - is_date_before
          type: string
          default: exact
        type:
          enum:
          - event
          - person
          - cohort
          - element
          - static-cohort
          - precalculated-cohort
          - group
          type: string
          default: event
      required:
      - key
      - value
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        organization:
          type: string
          format: uuid
          readOnly: true
        api_token:
          type: string
          readOnly: true
        app_urls:
          type: array
          items:
            type: string
            nullable: true
            maxLength: 200
        name:
          type: string
          maxLength: 200
          minLength: 1
        slack_incoming_webhook:
          type: string
          nullable: true
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        anonymize_ips:
          type: boolean
        completed_snippet_onboarding:
          type: boolean
        ingested_event:
          type: boolean
          readOnly: true
        test_account_filters:
          type: object
          additionalProperties: {}
        path_cleaning_filters:
          type: object
          additionalProperties: {}
          nullable: true
        is_demo:
          type: boolean
          readOnly: true
        timezone:
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GMT
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - US/Alaska
          - US/Arizona
          - US/Central
          - US/Eastern
          - US/Hawaii
          - US/Mountain
          - US/Pacific
          - UTC
          type: string
        data_attributes:
          type: object
          additionalProperties: {}
        correlation_config:
          type: object
          additionalProperties: {}
          nullable: true
        session_recording_opt_in:
          type: boolean
        effective_membership_level:
          enum:
          - 1
          - 8
          - 15
          type: integer
          nullable: true
          readOnly: true
        access_control:
          type: boolean
        has_group_types:
          type: boolean
          readOnly: true
      required:
      - api_token
      - created_at
      - effective_membership_level
      - has_group_types
      - id
      - ingested_event
      - is_demo
      - organization
      - updated_at
      - uuid
    TeamBasic:
      type: object
      description: |-
        Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.
        Also used for nested serializers.
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        organization:
          type: string
          format: uuid
        api_token:
          type: string
          maxLength: 200
          minLength: 10
        name:
          type: string
          maxLength: 200
          minLength: 1
        completed_snippet_onboarding:
          type: boolean
        ingested_event:
          type: boolean
        is_demo:
          type: boolean
        timezone:
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GMT
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - US/Alaska
          - US/Arizona
          - US/Central
          - US/Eastern
          - US/Hawaii
          - US/Mountain
          - US/Pacific
          - UTC
          type: string
        access_control:
          type: boolean
        effective_membership_level:
          enum:
          - 1
          - 8
          - 15
          type: integer
          nullable: true
          readOnly: true
      required:
      - effective_membership_level
      - id
      - organization
      - uuid
    Trend:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/FilterEvent'
          description: Events to filter on. One of `events` or `actions` is required.
        actions:
          type: array
          items:
            $ref: '#/components/schemas/FilterAction'
          description: Actions to filter on. One of `events` or `actions` is required.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
        filter_test_accounts:
          type: boolean
          default: false
          description: Whether to filter out internal and test accounts. See "project
            settings" in your PostHog account for the filters.
        date_from:
          type: string
          default: -7d
          description: What date to filter the results from. Can either be a date
            `2021-01-01`, or a relative date, like `-7d` for last seven days, `-1m`
            for last month, `mStart` for start of the month or `yStart` for the start
            of the year.
        date_to:
          type: string
          default: -7d
          description: What date to filter the results to. Can either be a date `2021-01-01`,
            or a relative date, like `-7d` for last seven days, `-1m` for last month,
            `mStart` for start of the month or `yStart` for the start of the year.
        breakdown:
          type: string
          description: A property to break down on. You can select the type of the
            property with breakdown_type.
        breakdown_type:
          enum:
          - event
          - person
          - cohort
          - group
          type: string
          description: Type of property to break down on.
        display:
          enum:
          - ActionsLineGraphLinear
          - ActionsLineGraphCumulative
          - ActionsTable
          - ActionsPieChart
          - ActionsBarChart
          - ActionsBarValue
          - ActionsBarChartValue
          type: string
          default: ActionsLineGraphLinear
          description: How to display the data. Will change how the data is returned.
        formula:
          type: string
          description: Combine the result of events or actions into a single number.
            For example `A + B` or `(A-B)/B`. The letters correspond to the order
            of the `events` or `actions` lists.
        compare:
          type: boolean
          description: For each returned result show the current period and the previous
            period. The result will contain `compare:true` and a `compare_label` with
            either `current` or `previous`.
    TrendResult:
      type: object
      properties:
        data:
          type: array
          items:
            type: integer
          description: The requested counts.
        days:
          type: array
          items:
            type: string
            format: date
          description: The dates corresponding to the data field above.
        labels:
          type: array
          items:
            type: string
          description: The dates corresponding to the data field above.
        filter:
          allOf:
          - $ref: '#/components/schemas/GenericInsights'
          description: The insight that's being returned.
        label:
          type: string
          description: |-
            A label describing this result. Will include
            - The event or action
            - Breakdown value
            - If `compare:true`, whether it's `current` or `previous`
      required:
      - data
      - days
      - filter
      - label
      - labels
    TrendResults:
      type: object
      properties:
        is_cached:
          type: boolean
          description: Whether the result is cached. To force a refresh, pass ?refresh=true
        last_refresh:
          type: string
          format: date-time
          description: If the result is cached, when it was last refreshed.
        result:
          type: array
          items:
            $ref: '#/components/schemas/TrendResult'
      required:
      - is_cached
      - last_refresh
      - result
    UserBasic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        distinct_id:
          type: string
          nullable: true
          maxLength: 200
        first_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - email
      - id
      - uuid
x-tagGroups:
- name: Analytics
  tags:
  - analytics
  - AML
  - Customers Timeline
- name: All endpoints
  tags:
  - actions
  - annotations
  - cohorts
  - dashboards
  - event_definitions
  - events
  - experiments
  - feature_flags
  - groups
  - groups_types
  - hooks
  - insights
  - invites
  - members
  - persons
  - plugin_configs
  - plugins
  - projects
  - property_definitions
  - reset_token
  - session_recordings
